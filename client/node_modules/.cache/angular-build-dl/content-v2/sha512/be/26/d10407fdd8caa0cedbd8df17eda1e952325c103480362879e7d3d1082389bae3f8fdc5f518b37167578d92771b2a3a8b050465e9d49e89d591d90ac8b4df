{"version":3,"sources":["webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/_services/token-storage.service.ts","webpack:///src/app/board-user/board-user.component.ts","webpack:///src/app/board-user/board-user.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/_services/user.service.ts","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/board-admin/board-admin.component.ts","webpack:///src/app/board-admin/board-admin.component.html","webpack:///src/app/board-moderator/board-moderator.component.ts","webpack:///src/app/board-moderator/board-moderator.component.html","webpack:///src/app/_helpers/auth.interceptor.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["RegisterComponent","authService","form","username","email","password","isSuccessful","isSignUpFailed","errorMessage","register","subscribe","data","console","log","err","error","message","selector","templateUrl","styleUrls","AUTH_API","httpOptions","headers","AuthService","http","post","providedIn","HomeComponent","userService","getPublicContent","content","JSON","parse","environment","production","TOKEN_KEY","USER_KEY","TokenStorageService","window","sessionStorage","clear","token","removeItem","setItem","getItem","user","stringify","BoardUserComponent","getUserBoard","AppComponent","tokenStorageService","roles","isLoggedIn","showAdminBoard","showModeratorBoard","getToken","getUser","includes","signOut","location","reload","API_URL","UserService","get","responseType","ProfileComponent","currentUser","AppModule","declarations","imports","providers","bootstrap","BoardAdminComponent","getAdminBoard","BoardModeratorComponent","getModeratorBoard","TOKEN_HEADER_KEY","AuthInterceptor","req","next","authReq","clone","set","handle","authInterceptorProviders","provide","useClass","multi","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","useHash","exports","LoginComponent","tokenStorage","isLoginFailed","login","saveToken","accessToken","saveUser","reloadPage","bootstrapModule","webpackEmptyAsyncContext","Promise","resolve","then","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: any = {\n    username: null,\n    email: null,\n    password: null\n  };\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    const { username, email, password } = this.form;\n\n    this.authService.register(username, email, password).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img\n      id=\"profile-img\"\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      class=\"profile-img-card\"\n    />\n    <form\n      *ngIf=\"!isSuccessful\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"username\"\n          [(ngModel)]=\"form.username\"\n          required\n          minlength=\"3\"\n          maxlength=\"20\"\n          #username=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"username.errors && f.submitted\">\n          <div *ngIf=\"username.errors.required\">Username is required</div>\n          <div *ngIf=\"username.errors.minlength\">\n            Username must be at least 3 characters\n          </div>\n          <div *ngIf=\"username.errors.maxlength\">\n            Username must be at most 20 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          name=\"email\"\n          [(ngModel)]=\"form.email\"\n          required\n          email\n          #email=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"email.errors && f.submitted\">\n          <div *ngIf=\"email.errors.required\">Email is required</div>\n          <div *ngIf=\"email.errors.email\">\n            Email must be a valid email address\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"6\"\n          #password=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"password.errors && f.submitted\">\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\n      </div>\n\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n        Signup failed!<br />{{ errorMessage }}\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n      Your registration is successful!\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst AUTH_API = 'http://localhost:8080/api/auth/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http: HttpClient) { }\n\n  login(username: string, password: string): Observable<any> {\n    return this.http.post(AUTH_API + 'signin', {\n      username,\n      password\n    }, httpOptions);\n  }\n\n  register(username: string, email: string, password: string): Observable<any> {\n    return this.http.post(AUTH_API + 'signup', {\n      username,\n      email,\n      password\n    }, httpOptions);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  content?: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.getPublicContent().subscribe(\n      data => {\n        this.content = data;\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n    <p>{{ content }}</p>\n  </header>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n  constructor() { }\n\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return window.sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUser(user: any): void {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return {};\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-board-user',\n  templateUrl: './board-user.component.html',\n  styleUrls: ['./board-user.component.css']\n})\nexport class BoardUserComponent implements OnInit {\n  content?: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.getUserBoard().subscribe(\n      data => {\n        this.content = data;\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n    <p>{{ content }}</p>\n  </header>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from './_services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  private roles: string[] = [];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showModeratorBoard = false;\n  username?: string;\n\n  constructor(private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.roles = user.roles;\n\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n\n      this.username = user.username;\n    }\n  }\n\n  logout(): void {\n    this.tokenStorageService.signOut();\n    window.location.reload();\n  }\n}\n","<div id=\"app\">\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <a href=\"#\" class=\"navbar-brand\">Anthem</a>\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\n      <li class=\"nav-item\">\n        <a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home </a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\n        <a href=\"/admin\" class=\"nav-link\" routerLink=\"admin\">Admin Board</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"showModeratorBoard\">\n        <a href=\"/mod\" class=\"nav-link\" routerLink=\"mod\">Moderator Board</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"/user\" class=\"nav-link\" *ngIf=\"isLoggedIn\" routerLink=\"user\">User</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn\">\n      <li class=\"nav-item\">\n        <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isLoggedIn\">\n      <li class=\"nav-item\">\n        <a href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">{{ username }}</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href class=\"nav-link\" (click)=\"logout()\">LogOut</a>\n      </li>\n    </ul>\n  </nav>\n\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst API_URL = 'http://localhost:8080/api/test/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private http: HttpClient) { }\n\n  getPublicContent(): Observable<any> {\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\n  }\n\n  getUserBoard(): Observable<any> {\n    return this.http.get(API_URL + 'user', { responseType: 'text' });\n  }\n\n  getModeratorBoard(): Observable<any> {\n    return this.http.get(API_URL + 'mod', { responseType: 'text' });\n  }\n\n  getAdminBoard(): Observable<any> {\n    return this.http.get(API_URL + 'admin', { responseType: 'text' });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  currentUser: any;\n\n  constructor(private token: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.token.getUser();\n  }\n}\n","<div class=\"container\" *ngIf=\"currentUser; else loggedOut\">\n  <header class=\"jumbotron\">\n    <h3>\n      <strong>{{ currentUser.username }}</strong> Profile\n    </h3>\n  </header>\n  <p>\n    <strong>Token:</strong>\n    {{ currentUser.accessToken.substring(0, 20) }} ...\n    {{ currentUser.accessToken.substr(currentUser.accessToken.length - 20) }}\n  </p>\n  <p>\n    <strong>Email:</strong>\n    {{ currentUser.email }}\n  </p>\n  <strong>Roles:</strong>\n  <ul>\n    <li *ngFor=\"let role of currentUser.roles\">\n      {{ role }}\n    </li>\n  </ul>\n</div>\n\n<ng-template #loggedOut>\n  Please login.\n</ng-template>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\nimport { BoardUserComponent } from './board-user/board-user.component';\n\nimport { authInterceptorProviders } from './_helpers/auth.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProfileComponent,\n    BoardAdminComponent,\n    BoardModeratorComponent,\n    BoardUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [authInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-board-admin',\n  templateUrl: './board-admin.component.html',\n  styleUrls: ['./board-admin.component.css']\n})\nexport class BoardAdminComponent implements OnInit {\n  content?: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.getAdminBoard().subscribe(\n      data => {\n        this.content = data;\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n    <p>{{ content }}</p>\n  </header>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-board-moderator',\n  templateUrl: './board-moderator.component.html',\n  styleUrls: ['./board-moderator.component.css']\n})\nexport class BoardModeratorComponent implements OnInit {\n  content?: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.getModeratorBoard().subscribe(\n      data => {\n        this.content = data;\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <header class=\"jumbotron\">\n    <p>{{ content }}</p>\n  </header>\n</div>\n","import { HTTP_INTERCEPTORS, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Observable } from 'rxjs';\n\nconst TOKEN_HEADER_KEY = 'Authorization';       // for Spring Boot back-end\n// const TOKEN_HEADER_KEY = 'x-access-token';   // for Node.js Express back-end\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private token: TokenStorageService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let authReq = req;\n    const token = this.token.getToken();\n    if (token != null) {\n      // for Spring Boot back-end\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\n\n      // for Node.js Express back-end\n      // authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });\n    }\n    return next.handle(authReq);\n  }\n}\n\nexport const authInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BoardUserComponent } from './board-user/board-user.component';\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'user', component: BoardUserComponent },\n  { path: 'mod', component: BoardModeratorComponent },\n  { path: 'admin', component: BoardAdminComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n  declarations: [],\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {\n    username: null,\n    password: null\n  };\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService) { }\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onSubmit(): void {\n    const { username, password } = this.form;\n\n    this.authService.login(username, password).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.reloadPage();\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img\n      id=\"profile-img\"\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      class=\"profile-img-card\"\n    />\n    <form\n      *ngIf=\"!isLoggedIn\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"username\"\n          [(ngModel)]=\"form.username\"\n          required\n          #username=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"username.errors && f.submitted\"\n        >\n          Username is required!\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"6\"\n          #password=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"password.errors && f.submitted\"\n        >\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">\n          Login\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"f.submitted && isLoginFailed\"\n        >\n          Login failed: {{ errorMessage }}\n        </div>\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n      Logged in as {{ roles }}.\n    </div>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}